import random
suits=('Heart','Diamonds','Spades','Club')
ranks=('Two','Three','Four','Five','Six','Seven','Eight','Nine','Ten','Jack','King','Queen','Ace')
values={'Two':2,'Three':3,'Four':4,'Five':5,'Six':6,'Seven':7,'Eight':8,'Nine':9,'Ten':10,'Jack':10,'King':10,'Queen':10,'Ace':11}
playing=True
class Cards:
    def __init__(self,suits,ranks):
        self.suits=suits
        self.ranks=ranks
    def __str__(self):
        return  self.ranks +' of '+ self.suits 
class Deck():
    def __init__(self):
        self.deck=[]
        for suit in suits:
            for rank in ranks:
                self.deck.append(Cards(suit,rank))
    def __str__(self):
        deck_comp='' 
        for card in self.deck:
            deck_comp += '\n'+card.__str__() 
        return 'The deck has:' + deck_comp
    def shuffle(self):
        random.shuffle(self.deck)
    def deal(self):
        single_card=self.deck.pop()
        return single_card
class Hand():
    def __init__(self):
        self.cards=[]
        self.value=0
        self.aces=0
    def add_card(self,card):
        self.cards.append(card)
        if card.ranks=='Ace':
            self.adjust_for_ace()
        else:    
            self.value+=values[card.ranks]
    def adjust_for_ace(self):
        if self.value in range(11,21):
            self.value+=1
        elif self.value in range(1,11):
            self.value+=11
class chips():
    def __init__(self,balance):
        self.balance=balance
        self.bet=0
    def win_bet(self):
        self.balance+=self.bet
    def lose_bet(self):
        self.balance-=self.bet
def take_bet(chips):
    while True:
        try:
            chips.bet=int(input('how many chips you wanted to bet?'))
        except:
            print('Sorry,invalid bet please enter a integer value')
        else:
            if chips.bet>chips.balance:
                print('you dont have enough money to bet')
            else:
                break
def hit(Deck,Hand):
    Hand.add_card(Deck.deal())
def hit_or_stand(Deck,Hand):
    global playing
    while True:
        ch=input('would you like to hit or stand?enter h or s')
        if ch.lower()=='h':
            hit(Deck,Hand)
        elif ch.lower()=='s':
            print('player stands ,dealer is playing')
            playing=False
        else:
            print('sorry please try again')
            continue
        break
def show_some(player,dealer):
    print("\nDealer's Hand:")
    print('<card hidden>')
    print(dealer.cards[1])
    print("\nPlayer's Hand:",*player.cards,sep='\n')
def show_all(player,dealer):
    print("\nDealer's Hand:",*dealer.cards,sep='\n')
    print("Dealer's Hand:",dealer.value)
    print("\nPlayer's Hand:",*player.cards,sep='\n')
    print("Player's Hand:",player.value)
def player_busts(player,dealer,chips):
    print("Player's busts")
    chips.lose_bet()
def player_wins(player,dealer,chips):
    print("Player's wins")
    chips.win_bet()
def dealer_busts(player,dealer,chips):
    print("Dealer's busts")
    chips.win_bet()
def dealer_wins(player,dealer,chips):
    print("Dealer's wins")
    chips.lose_bet()
def push(player,dealer):
    print("Game tied")
while True:
    print("Welcome to blackjack!Get as close to 21 as you can without going over!")
    print('\t Dealer hits until she reaches 17.Aces count as 1 or 11')
    d=Deck()
    d.shuffle()
    pl_hand=Hand()
    pl_hand.add_card(d.deal())
    pl_hand.add_card(d.deal())
    dl_hand=Hand()
    dl_hand.add_card(d.deal())
    dl_hand.add_card(d.deal())
    bal=int(input('how many chips do you have'))
    c=chips(bal)
    take_bet(c)
    show_some(pl_hand,dl_hand)
    while playing:
        hit_or_stand(d,pl_hand)
        show_some(pl_hand,dl_hand)
        if pl_hand.value>21:
            player_busts(pl_hand,dl_hand,c)
            break
    if pl_hand.value<=21:
        while dl_hand.value<17:
            hit(d,dl_hand)
        show_all(pl_hand,dl_hand) 
        if dl_hand.value>21:
            dealer_busts(pl_hand,dl_hand,c)
        elif pl_hand.value>dl_hand.value:
            player_wins(pl_hand,dl_hand,c)
        elif pl_hand.value<dl_hand.value:
            dealer_wins(pl_hand,dl_hand,c)
        elif pl_hand.value==dl_hand.value:
            push(dl_hand,pl_hand)
    print("Player's winnings stand at:",c.balance)
    res=input("would u like to play again? enter 'y' or 'n' ")
    if res.lower()=='y':
        playing=True
        continue
    else:
        print('Thanks for playing')
        break
                
        
